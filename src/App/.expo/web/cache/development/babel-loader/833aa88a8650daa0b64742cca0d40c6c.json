{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/home/kevin/Downloads/bobapp/node_modules/react-native-week-view/src/WeekView/WeekView.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport View from \"react-native-web/dist/exports/View\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport VirtualizedList from \"react-native-web/dist/exports/VirtualizedList\";\nimport InteractionManager from \"react-native-web/dist/exports/InteractionManager\";\nimport moment from 'moment';\nimport memoizeOne from 'memoize-one';\nimport Event from \"../Event/Event\";\nimport Events from \"../Events/Events\";\nimport Header from \"../Header/Header\";\nimport Title from \"../Title/Title\";\nimport Times from \"../Times/Times\";\nimport styles from \"./WeekView.styles\";\nimport { TIME_LABELS_IN_DISPLAY, CONTAINER_HEIGHT, DATE_STR_FORMAT, availableNumberOfDays, setLocale, CONTAINER_WIDTH } from \"../utils\";\nvar MINUTES_IN_DAY = 60 * 24;\n\nvar WeekView = function (_Component) {\n  _inherits(WeekView, _Component);\n\n  var _super = _createSuper(WeekView);\n\n  function WeekView(props) {\n    var _this;\n\n    _classCallCheck(this, WeekView);\n\n    _this = _super.call(this, props);\n    _this.calculateTimes = memoizeOne(function (hoursInDisplay) {\n      var times = [];\n      var timeLabelsPerHour = TIME_LABELS_IN_DISPLAY / hoursInDisplay;\n      var minutesStep = 60 / timeLabelsPerHour;\n\n      for (var timer = 0; timer < MINUTES_IN_DAY; timer += minutesStep) {\n        var minutes = timer % 60;\n        if (minutes < 10) minutes = \"0\" + minutes;\n        var hour = Math.floor(timer / 60);\n        var timeString = hour + \":\" + minutes;\n        times.push(timeString);\n      }\n\n      return times;\n    });\n\n    _this.scrollToVerticalStart = function () {\n      if (_this.verticalAgenda) {\n        var _this$props = _this.props,\n            startHour = _this$props.startHour,\n            hoursInDisplay = _this$props.hoursInDisplay;\n        var startHeight = startHour * CONTAINER_HEIGHT / hoursInDisplay;\n\n        _this.verticalAgenda.scrollTo({\n          y: startHeight,\n          x: 0,\n          animated: false\n        });\n      }\n    };\n\n    _this.getSignToTheFuture = function () {\n      var prependMostRecent = _this.props.prependMostRecent;\n      var daySignToTheFuture = prependMostRecent ? -1 : 1;\n      return daySignToTheFuture;\n    };\n\n    _this.prependPagesInPlace = function (initialDates, nPages) {\n      var numberOfDays = _this.props.numberOfDays;\n\n      var daySignToTheFuture = _this.getSignToTheFuture();\n\n      var first = initialDates[0];\n      var daySignToThePast = daySignToTheFuture * -1;\n      var addDays = numberOfDays * daySignToThePast;\n\n      for (var i = 1; i <= nPages; i += 1) {\n        var initialDate = moment(first).add(addDays * i, 'd');\n        initialDates.unshift(initialDate.format(DATE_STR_FORMAT));\n      }\n    };\n\n    _this.appendPagesInPlace = function (initialDates, nPages) {\n      var numberOfDays = _this.props.numberOfDays;\n\n      var daySignToTheFuture = _this.getSignToTheFuture();\n\n      var latest = initialDates[initialDates.length - 1];\n      var addDays = numberOfDays * daySignToTheFuture;\n\n      for (var i = 1; i <= nPages; i += 1) {\n        var initialDate = moment(latest).add(addDays * i, 'd');\n        initialDates.push(initialDate.format(DATE_STR_FORMAT));\n      }\n    };\n\n    _this.goToDate = function (targetDate) {\n      var animated = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n      var initialDates = _this.state.initialDates;\n      var numberOfDays = _this.props.numberOfDays;\n      var currentDate = initialDates[_this.currentPageIndex];\n      var deltaDay = moment(targetDate).diff(currentDate, 'day');\n      var deltaIndex = Math.floor(deltaDay / numberOfDays);\n\n      var signToTheFuture = _this.getSignToTheFuture();\n\n      var targetIndex = _this.currentPageIndex + deltaIndex * signToTheFuture;\n\n      if (targetIndex === _this.currentPageIndex) {\n        return;\n      }\n\n      var scrollTo = function scrollTo(moveToIndex) {\n        _this.eventsGrid.scrollToIndex({\n          index: moveToIndex,\n          animated: animated\n        });\n\n        _this.currentPageIndex = moveToIndex;\n      };\n\n      var newState = {};\n\n      var newStateCallback = function newStateCallback() {};\n\n      var lastViewablePage = initialDates.length - _this.pageOffset;\n\n      if (targetIndex < _this.pageOffset) {\n        var nPages = _this.pageOffset - targetIndex;\n\n        _this.prependPagesInPlace(initialDates, nPages);\n\n        targetIndex = _this.pageOffset;\n        newState.initialDates = _toConsumableArray(initialDates);\n\n        newStateCallback = function newStateCallback() {\n          return setTimeout(function () {\n            return scrollTo(targetIndex);\n          }, 0);\n        };\n      } else if (targetIndex > lastViewablePage) {\n        var _nPages = targetIndex - lastViewablePage;\n\n        _this.appendPagesInPlace(initialDates, _nPages);\n\n        targetIndex = initialDates.length - _this.pageOffset;\n        newState.initialDates = _toConsumableArray(initialDates);\n\n        newStateCallback = function newStateCallback() {\n          return setTimeout(function () {\n            return scrollTo(targetIndex);\n          }, 0);\n        };\n      } else {\n        scrollTo(targetIndex);\n      }\n\n      newState.currentMoment = moment(initialDates[targetIndex]).toDate();\n\n      _this.setState(newState, newStateCallback);\n    };\n\n    _this.scrollEnded = function (event) {\n      var _event$nativeEvent = event.nativeEvent,\n          contentOffset = _event$nativeEvent.contentOffset,\n          contentSize = _event$nativeEvent.contentSize;\n      var position = contentOffset.x;\n      var innerWidth = contentSize.width;\n      var _this$props2 = _this.props,\n          onSwipePrev = _this$props2.onSwipePrev,\n          onSwipeNext = _this$props2.onSwipeNext;\n      var initialDates = _this.state.initialDates;\n      var newPage = Math.round(position / innerWidth * initialDates.length);\n      var movedPages = newPage - _this.currentPageIndex;\n      _this.currentPageIndex = newPage;\n\n      if (movedPages === 0) {\n        return;\n      }\n\n      InteractionManager.runAfterInteractions(function () {\n        var newMoment = moment(initialDates[_this.currentPageIndex]).toDate();\n        var newState = {\n          currentMoment: newMoment\n        };\n\n        var newStateCallback = function newStateCallback() {};\n\n        if (movedPages < 0 && newPage < _this.pageOffset) {\n          _this.prependPagesInPlace(initialDates, 1);\n\n          _this.currentPageIndex += 1;\n          newState.initialDates = _toConsumableArray(initialDates);\n\n          var scrollToCurrentIndex = function scrollToCurrentIndex() {\n            return _this.eventsGrid.scrollToIndex({\n              index: _this.currentPageIndex,\n              animated: false\n            });\n          };\n\n          newStateCallback = function newStateCallback() {\n            return setTimeout(scrollToCurrentIndex, 0);\n          };\n        } else if (movedPages > 0 && newPage >= _this.state.initialDates.length - _this.pageOffset) {\n          _this.appendPagesInPlace(initialDates, 1);\n\n          newState.initialDates = _toConsumableArray(initialDates);\n        }\n\n        _this.setState(newState, newStateCallback);\n\n        if (movedPages < 0) {\n          onSwipePrev && onSwipePrev(newMoment);\n        } else {\n          onSwipeNext && onSwipeNext(newMoment);\n        }\n      });\n    };\n\n    _this.eventsGridRef = function (ref) {\n      _this.eventsGrid = ref;\n    };\n\n    _this.verticalAgendaRef = function (ref) {\n      _this.verticalAgenda = ref;\n    };\n\n    _this.headerRef = function (ref) {\n      _this.header = ref;\n    };\n\n    _this.calculatePagesDates = function (currentMoment, numberOfDays, prependMostRecent) {\n      var initialDates = [];\n\n      for (var i = -_this.pageOffset; i <= _this.pageOffset; i += 1) {\n        var initialDate = moment(currentMoment).add(numberOfDays * i, 'd');\n        initialDates.push(initialDate.format(DATE_STR_FORMAT));\n      }\n\n      return prependMostRecent ? initialDates.reverse() : initialDates;\n    };\n\n    _this.sortEventsByDate = memoizeOne(function (events) {\n      var sortedEvents = {};\n      events.forEach(function (event) {\n        var startDate = moment(event.startDate);\n        var endDate = moment(event.endDate);\n\n        for (var date = moment(startDate); date.isSameOrBefore(endDate, 'days'); date.add(1, 'days')) {\n          var startOfDay = moment(date).startOf('day');\n          var endOfDay = moment(date).endOf('day');\n          var actualStartDate = moment.max(startDate, startOfDay);\n          var actualEndDate = moment.min(endDate, endOfDay);\n          var dateStr = date.format(DATE_STR_FORMAT);\n\n          if (!sortedEvents[dateStr]) {\n            sortedEvents[dateStr] = [];\n          }\n\n          sortedEvents[dateStr].push(_objectSpread(_objectSpread({}, event), {}, {\n            startDate: actualStartDate.toDate(),\n            endDate: actualEndDate.toDate()\n          }));\n        }\n      });\n      Object.keys(sortedEvents).forEach(function (date) {\n        sortedEvents[date].sort(function (a, b) {\n          return moment(a.startDate).diff(b.startDate, 'minutes');\n        });\n      });\n      return sortedEvents;\n    });\n\n    _this.getListItemLayout = function (index) {\n      return {\n        length: CONTAINER_WIDTH,\n        offset: CONTAINER_WIDTH * index,\n        index: index\n      };\n    };\n\n    _this.eventsGrid = null;\n    _this.verticalAgenda = null;\n    _this.header = null;\n    _this.pageOffset = 2;\n    _this.currentPageIndex = _this.pageOffset;\n    _this.eventsGridScrollX = new Animated.Value(0);\n\n    var _initialDates = _this.calculatePagesDates(props.selectedDate, props.numberOfDays, props.prependMostRecent);\n\n    _this.state = {\n      currentMoment: moment(_initialDates[_this.currentPageIndex]).toDate(),\n      initialDates: _initialDates\n    };\n    setLocale(props.locale);\n    return _this;\n  }\n\n  _createClass(WeekView, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      requestAnimationFrame(function () {\n        _this2.scrollToVerticalStart();\n      });\n      this.eventsGridScrollX.addListener(function (position) {\n        _this2.header.scrollToOffset({\n          offset: position.value,\n          animated: false\n        });\n      });\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevprops) {\n      if (this.props.locale !== prevprops.locale) {\n        setLocale(this.props.locale);\n      }\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this.eventsGridScrollX.removeAllListeners();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      var _this$props3 = this.props,\n          showTitle = _this$props3.showTitle,\n          numberOfDays = _this$props3.numberOfDays,\n          headerStyle = _this$props3.headerStyle,\n          headerTextStyle = _this$props3.headerTextStyle,\n          hourTextStyle = _this$props3.hourTextStyle,\n          eventContainerStyle = _this$props3.eventContainerStyle,\n          formatDateHeader = _this$props3.formatDateHeader,\n          onEventPress = _this$props3.onEventPress,\n          events = _this$props3.events,\n          hoursInDisplay = _this$props3.hoursInDisplay,\n          onGridClick = _this$props3.onGridClick,\n          EventComponent = _this$props3.EventComponent,\n          prependMostRecent = _this$props3.prependMostRecent,\n          rightToLeft = _this$props3.rightToLeft;\n      var _this$state = this.state,\n          currentMoment = _this$state.currentMoment,\n          initialDates = _this$state.initialDates;\n      var times = this.calculateTimes(hoursInDisplay);\n      var eventsByDate = this.sortEventsByDate(events);\n      var horizontalInverted = prependMostRecent && !rightToLeft || !prependMostRecent && rightToLeft;\n      return React.createElement(View, {\n        style: styles.container,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 324,\n          columnNumber: 7\n        }\n      }, React.createElement(View, {\n        style: styles.headerContainer,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 325,\n          columnNumber: 9\n        }\n      }, React.createElement(Title, {\n        showTitle: showTitle,\n        style: headerStyle,\n        textStyle: headerTextStyle,\n        numberOfDays: numberOfDays,\n        selectedDate: currentMoment,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 326,\n          columnNumber: 11\n        }\n      }), React.createElement(VirtualizedList, {\n        horizontal: true,\n        pagingEnabled: true,\n        inverted: horizontalInverted,\n        showsHorizontalScrollIndicator: false,\n        scrollEnabled: false,\n        ref: this.headerRef,\n        data: initialDates,\n        getItem: function getItem(data, index) {\n          return data[index];\n        },\n        getItemCount: function getItemCount(data) {\n          return data.length;\n        },\n        getItemLayout: function getItemLayout(_, index) {\n          return _this3.getListItemLayout(index);\n        },\n        keyExtractor: function keyExtractor(item) {\n          return item;\n        },\n        initialScrollIndex: this.pageOffset,\n        renderItem: function renderItem(_ref) {\n          var item = _ref.item;\n          return React.createElement(View, {\n            key: item,\n            style: styles.header,\n            __self: _this3,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 348,\n              columnNumber: 17\n            }\n          }, React.createElement(Header, {\n            style: headerStyle,\n            textStyle: headerTextStyle,\n            formatDate: formatDateHeader,\n            initialDate: item,\n            numberOfDays: numberOfDays,\n            rightToLeft: rightToLeft,\n            __self: _this3,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 349,\n              columnNumber: 19\n            }\n          }));\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 333,\n          columnNumber: 11\n        }\n      })), React.createElement(ScrollView, {\n        ref: this.verticalAgendaRef,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 362,\n          columnNumber: 9\n        }\n      }, React.createElement(View, {\n        style: styles.scrollViewContent,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 363,\n          columnNumber: 11\n        }\n      }, React.createElement(Times, {\n        times: times,\n        textStyle: hourTextStyle,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 364,\n          columnNumber: 13\n        }\n      }), React.createElement(VirtualizedList, {\n        data: initialDates,\n        getItem: function getItem(data, index) {\n          return data[index];\n        },\n        getItemCount: function getItemCount(data) {\n          return data.length;\n        },\n        getItemLayout: function getItemLayout(_, index) {\n          return _this3.getListItemLayout(index);\n        },\n        keyExtractor: function keyExtractor(item) {\n          return item;\n        },\n        initialScrollIndex: this.pageOffset,\n        renderItem: function renderItem(_ref2) {\n          var item = _ref2.item;\n          return React.createElement(Events, {\n            times: times,\n            eventsByDate: eventsByDate,\n            initialDate: item,\n            numberOfDays: numberOfDays,\n            onEventPress: onEventPress,\n            onGridClick: onGridClick,\n            hoursInDisplay: hoursInDisplay,\n            EventComponent: EventComponent,\n            eventContainerStyle: eventContainerStyle,\n            rightToLeft: rightToLeft,\n            __self: _this3,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 374,\n              columnNumber: 19\n            }\n          });\n        },\n        horizontal: true,\n        pagingEnabled: true,\n        inverted: horizontalInverted,\n        onMomentumScrollEnd: this.scrollEnded,\n        scrollEventThrottle: 32,\n        onScroll: Animated.event([{\n          nativeEvent: {\n            contentOffset: {\n              x: this.eventsGridScrollX\n            }\n          }\n        }], {\n          useNativeDriver: false\n        }),\n        ref: this.eventsGridRef,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 365,\n          columnNumber: 13\n        }\n      }))));\n    }\n  }]);\n\n  return WeekView;\n}(Component);\n\nexport { WeekView as default };\nWeekView.propTypes = {\n  events: PropTypes.arrayOf(Event.propTypes.event),\n  formatDateHeader: PropTypes.string,\n  numberOfDays: PropTypes.oneOf(availableNumberOfDays).isRequired,\n  onSwipeNext: PropTypes.func,\n  onSwipePrev: PropTypes.func,\n  onEventPress: PropTypes.func,\n  onGridClick: PropTypes.func,\n  headerStyle: PropTypes.object,\n  headerTextStyle: PropTypes.object,\n  hourTextStyle: PropTypes.object,\n  eventContainerStyle: PropTypes.object,\n  selectedDate: PropTypes.instanceOf(Date).isRequired,\n  locale: PropTypes.string,\n  hoursInDisplay: PropTypes.number,\n  startHour: PropTypes.number,\n  EventComponent: PropTypes.elementType,\n  showTitle: PropTypes.bool,\n  rightToLeft: PropTypes.bool,\n  prependMostRecent: PropTypes.bool\n};\nWeekView.defaultProps = {\n  events: [],\n  locale: 'en',\n  hoursInDisplay: 6,\n  startHour: 0,\n  showTitle: true,\n  rightToLeft: false,\n  prependMostRecent: false\n};","map":{"version":3,"sources":["/home/kevin/Downloads/bobapp/node_modules/react-native-week-view/src/WeekView/WeekView.js"],"names":["React","Component","PropTypes","moment","memoizeOne","Event","Events","Header","Title","Times","styles","TIME_LABELS_IN_DISPLAY","CONTAINER_HEIGHT","DATE_STR_FORMAT","availableNumberOfDays","setLocale","CONTAINER_WIDTH","MINUTES_IN_DAY","WeekView","props","calculateTimes","hoursInDisplay","times","timeLabelsPerHour","minutesStep","timer","minutes","hour","Math","floor","timeString","push","scrollToVerticalStart","verticalAgenda","startHour","startHeight","scrollTo","y","x","animated","getSignToTheFuture","prependMostRecent","daySignToTheFuture","prependPagesInPlace","initialDates","nPages","numberOfDays","first","daySignToThePast","addDays","i","initialDate","add","unshift","format","appendPagesInPlace","latest","length","goToDate","targetDate","state","currentDate","currentPageIndex","deltaDay","diff","deltaIndex","signToTheFuture","targetIndex","moveToIndex","eventsGrid","scrollToIndex","index","newState","newStateCallback","lastViewablePage","pageOffset","setTimeout","currentMoment","toDate","setState","scrollEnded","event","nativeEvent","contentOffset","contentSize","position","innerWidth","width","onSwipePrev","onSwipeNext","newPage","round","movedPages","InteractionManager","runAfterInteractions","newMoment","scrollToCurrentIndex","eventsGridRef","ref","verticalAgendaRef","headerRef","header","calculatePagesDates","reverse","sortEventsByDate","events","sortedEvents","forEach","startDate","endDate","date","isSameOrBefore","startOfDay","startOf","endOfDay","endOf","actualStartDate","max","actualEndDate","min","dateStr","Object","keys","sort","a","b","getListItemLayout","offset","eventsGridScrollX","Animated","Value","selectedDate","locale","requestAnimationFrame","addListener","scrollToOffset","value","prevprops","removeAllListeners","showTitle","headerStyle","headerTextStyle","hourTextStyle","eventContainerStyle","formatDateHeader","onEventPress","onGridClick","EventComponent","rightToLeft","eventsByDate","horizontalInverted","container","headerContainer","data","_","item","scrollViewContent","useNativeDriver","propTypes","arrayOf","string","oneOf","isRequired","func","object","instanceOf","Date","number","elementType","bool","defaultProps"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  View,\n  ScrollView,\n  Animated,\n  VirtualizedList,\n  InteractionManager,\n} from 'react-native';\nimport moment from 'moment';\nimport memoizeOne from 'memoize-one';\n\nimport Event from '../Event/Event';\nimport Events from '../Events/Events';\nimport Header from '../Header/Header';\nimport Title from '../Title/Title';\nimport Times from '../Times/Times';\nimport styles from './WeekView.styles';\nimport {\n  TIME_LABELS_IN_DISPLAY,\n  CONTAINER_HEIGHT,\n  DATE_STR_FORMAT,\n  availableNumberOfDays,\n  setLocale,\n  CONTAINER_WIDTH,\n} from '../utils';\n\nconst MINUTES_IN_DAY = 60 * 24;\n\nexport default class WeekView extends Component {\n  constructor(props) {\n    super(props);\n    this.eventsGrid = null;\n    this.verticalAgenda = null;\n    this.header = null;\n    this.pageOffset = 2;\n    this.currentPageIndex = this.pageOffset;\n    this.eventsGridScrollX = new Animated.Value(0);\n\n    const initialDates = this.calculatePagesDates(\n      props.selectedDate,\n      props.numberOfDays,\n      props.prependMostRecent,\n    );\n    this.state = {\n      // currentMoment should always be the first date of the current page\n      currentMoment: moment(initialDates[this.currentPageIndex]).toDate(),\n      initialDates,\n    };\n\n    setLocale(props.locale);\n  }\n\n  componentDidMount() {\n    requestAnimationFrame(() => {\n      this.scrollToVerticalStart();\n    });\n    this.eventsGridScrollX.addListener((position) => {\n      this.header.scrollToOffset({ offset: position.value, animated: false });\n    });\n  }\n\n  componentDidUpdate(prevprops) {\n    if (this.props.locale !== prevprops.locale) {\n      setLocale(this.props.locale);\n    }\n  }\n\n  componentWillUnmount() {\n    this.eventsGridScrollX.removeAllListeners();\n  }\n\n  calculateTimes = memoizeOne((hoursInDisplay) => {\n    const times = [];\n    const timeLabelsPerHour = TIME_LABELS_IN_DISPLAY / hoursInDisplay;\n    const minutesStep = 60 / timeLabelsPerHour;\n    for (let timer = 0; timer < MINUTES_IN_DAY; timer += minutesStep) {\n      let minutes = timer % 60;\n      if (minutes < 10) minutes = `0${minutes}`;\n      const hour = Math.floor(timer / 60);\n      const timeString = `${hour}:${minutes}`;\n      times.push(timeString);\n    }\n    return times;\n  });\n\n  scrollToVerticalStart = () => {\n    if (this.verticalAgenda) {\n      const { startHour, hoursInDisplay } = this.props;\n      const startHeight = (startHour * CONTAINER_HEIGHT) / hoursInDisplay;\n      this.verticalAgenda.scrollTo({ y: startHeight, x: 0, animated: false });\n    }\n  };\n\n  getSignToTheFuture = () => {\n    const { prependMostRecent } = this.props;\n\n    const daySignToTheFuture = prependMostRecent ? -1 : 1;\n    return daySignToTheFuture;\n  };\n\n  prependPagesInPlace = (initialDates, nPages) => {\n    const { numberOfDays } = this.props;\n    const daySignToTheFuture = this.getSignToTheFuture();\n\n    const first = initialDates[0];\n    const daySignToThePast = daySignToTheFuture * -1;\n    const addDays = numberOfDays * daySignToThePast;\n    for (let i = 1; i <= nPages; i += 1) {\n      const initialDate = moment(first).add(addDays * i, 'd');\n      initialDates.unshift(initialDate.format(DATE_STR_FORMAT));\n    }\n  };\n\n  appendPagesInPlace = (initialDates, nPages) => {\n    const { numberOfDays } = this.props;\n    const daySignToTheFuture = this.getSignToTheFuture();\n\n    const latest = initialDates[initialDates.length - 1];\n    const addDays = numberOfDays * daySignToTheFuture;\n    for (let i = 1; i <= nPages; i += 1) {\n      const initialDate = moment(latest).add(addDays * i, 'd');\n      initialDates.push(initialDate.format(DATE_STR_FORMAT));\n    }\n  };\n\n  goToDate = (targetDate, animated = true) => {\n    const { initialDates } = this.state;\n    const { numberOfDays } = this.props;\n\n    const currentDate = initialDates[this.currentPageIndex];\n    const deltaDay = moment(targetDate).diff(currentDate, 'day');\n    const deltaIndex = Math.floor(deltaDay / numberOfDays);\n    const signToTheFuture = this.getSignToTheFuture();\n    let targetIndex = this.currentPageIndex + deltaIndex * signToTheFuture;\n\n    if (targetIndex === this.currentPageIndex) {\n      return;\n    }\n\n    const scrollTo = (moveToIndex) => {\n      this.eventsGrid.scrollToIndex({\n        index: moveToIndex,\n        animated,\n      });\n      this.currentPageIndex = moveToIndex;\n    };\n\n    const newState = {};\n    let newStateCallback = () => {};\n\n    const lastViewablePage = initialDates.length - this.pageOffset;\n    if (targetIndex < this.pageOffset) {\n      const nPages = this.pageOffset - targetIndex;\n      this.prependPagesInPlace(initialDates, nPages);\n\n      targetIndex = this.pageOffset;\n\n      newState.initialDates = [...initialDates];\n      newStateCallback = () => setTimeout(() => scrollTo(targetIndex), 0);\n    } else if (targetIndex > lastViewablePage) {\n      const nPages = targetIndex - lastViewablePage;\n      this.appendPagesInPlace(initialDates, nPages);\n\n      targetIndex = initialDates.length - this.pageOffset;\n\n      newState.initialDates = [...initialDates];\n      newStateCallback = () => setTimeout(() => scrollTo(targetIndex), 0);\n    } else {\n      scrollTo(targetIndex);\n    }\n\n    newState.currentMoment = moment(initialDates[targetIndex]).toDate();\n    this.setState(newState, newStateCallback);\n  };\n\n  scrollEnded = (event) => {\n    const {\n      nativeEvent: { contentOffset, contentSize },\n    } = event;\n    const { x: position } = contentOffset;\n    const { width: innerWidth } = contentSize;\n    const { onSwipePrev, onSwipeNext } = this.props;\n    const { initialDates } = this.state;\n\n    const newPage = Math.round((position / innerWidth) * initialDates.length);\n    const movedPages = newPage - this.currentPageIndex;\n    this.currentPageIndex = newPage;\n\n    if (movedPages === 0) {\n      return;\n    }\n\n    InteractionManager.runAfterInteractions(() => {\n      const newMoment = moment(initialDates[this.currentPageIndex]).toDate();\n      const newState = {\n        currentMoment: newMoment,\n      };\n      let newStateCallback = () => {};\n\n      if (movedPages < 0 && newPage < this.pageOffset) {\n        this.prependPagesInPlace(initialDates, 1);\n        this.currentPageIndex += 1;\n\n        newState.initialDates = [...initialDates];\n        const scrollToCurrentIndex = () =>\n          this.eventsGrid.scrollToIndex({\n            index: this.currentPageIndex,\n            animated: false,\n          });\n        newStateCallback = () => setTimeout(scrollToCurrentIndex, 0);\n      } else if (\n        movedPages > 0 &&\n        newPage >= this.state.initialDates.length - this.pageOffset\n      ) {\n        this.appendPagesInPlace(initialDates, 1);\n\n        newState.initialDates = [...initialDates];\n      }\n\n      this.setState(newState, newStateCallback);\n\n      if (movedPages < 0) {\n        onSwipePrev && onSwipePrev(newMoment);\n      } else {\n        onSwipeNext && onSwipeNext(newMoment);\n      }\n    });\n  };\n\n  eventsGridRef = (ref) => {\n    this.eventsGrid = ref;\n  };\n\n  verticalAgendaRef = (ref) => {\n    this.verticalAgenda = ref;\n  };\n\n  headerRef = (ref) => {\n    this.header = ref;\n  };\n\n  calculatePagesDates = (currentMoment, numberOfDays, prependMostRecent) => {\n    const initialDates = [];\n    for (let i = -this.pageOffset; i <= this.pageOffset; i += 1) {\n      const initialDate = moment(currentMoment).add(numberOfDays * i, 'd');\n      initialDates.push(initialDate.format(DATE_STR_FORMAT));\n    }\n    return prependMostRecent ? initialDates.reverse() : initialDates;\n  };\n\n  sortEventsByDate = memoizeOne((events) => {\n    // Stores the events hashed by their date\n    // For example: { \"2020-02-03\": [event1, event2, ...] }\n    // If an event spans through multiple days, adds the event multiple times\n    const sortedEvents = {};\n    events.forEach((event) => {\n      const startDate = moment(event.startDate);\n      const endDate = moment(event.endDate);\n\n      for (\n        let date = moment(startDate);\n        date.isSameOrBefore(endDate, 'days');\n        date.add(1, 'days')\n      ) {\n        // Calculate actual start and end dates\n        const startOfDay = moment(date).startOf('day');\n        const endOfDay = moment(date).endOf('day');\n        const actualStartDate = moment.max(startDate, startOfDay);\n        const actualEndDate = moment.min(endDate, endOfDay);\n\n        // Add to object\n        const dateStr = date.format(DATE_STR_FORMAT);\n        if (!sortedEvents[dateStr]) {\n          sortedEvents[dateStr] = [];\n        }\n        sortedEvents[dateStr].push({\n          ...event,\n          startDate: actualStartDate.toDate(),\n          endDate: actualEndDate.toDate(),\n        });\n      }\n    });\n    // For each day, sort the events by the minute (in-place)\n    Object.keys(sortedEvents).forEach((date) => {\n      sortedEvents[date].sort((a, b) => {\n        return moment(a.startDate).diff(b.startDate, 'minutes');\n      });\n    });\n    return sortedEvents;\n  });\n\n  getListItemLayout = (index) => ({\n    length: CONTAINER_WIDTH,\n    offset: CONTAINER_WIDTH * index,\n    index,\n  });\n\n  render() {\n    const {\n      showTitle,\n      numberOfDays,\n      headerStyle,\n      headerTextStyle,\n      hourTextStyle,\n      eventContainerStyle,\n      formatDateHeader,\n      onEventPress,\n      events,\n      hoursInDisplay,\n      onGridClick,\n      EventComponent,\n      prependMostRecent,\n      rightToLeft,\n    } = this.props;\n    const { currentMoment, initialDates } = this.state;\n    const times = this.calculateTimes(hoursInDisplay);\n    const eventsByDate = this.sortEventsByDate(events);\n    const horizontalInverted =\n      (prependMostRecent && !rightToLeft) ||\n      (!prependMostRecent && rightToLeft);\n\n    return (\n      <View style={styles.container}>\n        <View style={styles.headerContainer}>\n          <Title\n            showTitle={showTitle}\n            style={headerStyle}\n            textStyle={headerTextStyle}\n            numberOfDays={numberOfDays}\n            selectedDate={currentMoment}\n          />\n          <VirtualizedList\n            horizontal\n            pagingEnabled\n            inverted={horizontalInverted}\n            showsHorizontalScrollIndicator={false}\n            scrollEnabled={false}\n            ref={this.headerRef}\n            data={initialDates}\n            getItem={(data, index) => data[index]}\n            getItemCount={(data) => data.length}\n            getItemLayout={(_, index) => this.getListItemLayout(index)}\n            keyExtractor={(item) => item}\n            initialScrollIndex={this.pageOffset}\n            renderItem={({ item }) => {\n              return (\n                <View key={item} style={styles.header}>\n                  <Header\n                    style={headerStyle}\n                    textStyle={headerTextStyle}\n                    formatDate={formatDateHeader}\n                    initialDate={item}\n                    numberOfDays={numberOfDays}\n                    rightToLeft={rightToLeft}\n                  />\n                </View>\n              );\n            }}\n          />\n        </View>\n        <ScrollView ref={this.verticalAgendaRef}>\n          <View style={styles.scrollViewContent}>\n            <Times times={times} textStyle={hourTextStyle} />\n            <VirtualizedList\n              data={initialDates}\n              getItem={(data, index) => data[index]}\n              getItemCount={(data) => data.length}\n              getItemLayout={(_, index) => this.getListItemLayout(index)}\n              keyExtractor={(item) => item}\n              initialScrollIndex={this.pageOffset}\n              renderItem={({ item }) => {\n                return (\n                  <Events\n                    times={times}\n                    eventsByDate={eventsByDate}\n                    initialDate={item}\n                    numberOfDays={numberOfDays}\n                    onEventPress={onEventPress}\n                    onGridClick={onGridClick}\n                    hoursInDisplay={hoursInDisplay}\n                    EventComponent={EventComponent}\n                    eventContainerStyle={eventContainerStyle}\n                    rightToLeft={rightToLeft}\n                  />\n                );\n              }}\n              horizontal\n              pagingEnabled\n              inverted={horizontalInverted}\n              onMomentumScrollEnd={this.scrollEnded}\n              scrollEventThrottle={32}\n              onScroll={Animated.event(\n                [\n                  {\n                    nativeEvent: {\n                      contentOffset: {\n                        x: this.eventsGridScrollX,\n                      },\n                    },\n                  },\n                ],\n                { useNativeDriver: false },\n              )}\n              ref={this.eventsGridRef}\n            />\n          </View>\n        </ScrollView>\n      </View>\n    );\n  }\n}\n\nWeekView.propTypes = {\n  events: PropTypes.arrayOf(Event.propTypes.event),\n  formatDateHeader: PropTypes.string,\n  numberOfDays: PropTypes.oneOf(availableNumberOfDays).isRequired,\n  onSwipeNext: PropTypes.func,\n  onSwipePrev: PropTypes.func,\n  onEventPress: PropTypes.func,\n  onGridClick: PropTypes.func,\n  headerStyle: PropTypes.object,\n  headerTextStyle: PropTypes.object,\n  hourTextStyle: PropTypes.object,\n  eventContainerStyle: PropTypes.object,\n  selectedDate: PropTypes.instanceOf(Date).isRequired,\n  locale: PropTypes.string,\n  hoursInDisplay: PropTypes.number,\n  startHour: PropTypes.number,\n  EventComponent: PropTypes.elementType,\n  showTitle: PropTypes.bool,\n  rightToLeft: PropTypes.bool,\n  prependMostRecent: PropTypes.bool,\n};\n\nWeekView.defaultProps = {\n  events: [],\n  locale: 'en',\n  hoursInDisplay: 6,\n  startHour: 0,\n  showTitle: true,\n  rightToLeft: false,\n  prependMostRecent: false,\n};\n"]},"metadata":{},"sourceType":"module"}