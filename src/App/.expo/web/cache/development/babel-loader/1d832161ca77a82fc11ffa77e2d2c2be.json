{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/home/kevin/Downloads/bobapp/node_modules/react-native-week-view/src/Header/Header.js\";\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { getFormattedDate, calculateDaysArray, availableNumberOfDays } from \"../utils\";\nimport styles from \"./Header.styles\";\n\nvar getDayTextStyles = function getDayTextStyles(numberOfDays) {\n  var fontSize = numberOfDays === 7 ? 12 : 14;\n  return {\n    fontSize: fontSize\n  };\n};\n\nvar Column = function Column(_ref) {\n  var column = _ref.column,\n      numberOfDays = _ref.numberOfDays,\n      format = _ref.format,\n      style = _ref.style,\n      textStyle = _ref.textStyle;\n  return React.createElement(View, {\n    style: [styles.column, style],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 5\n    }\n  }, React.createElement(Text, {\n    style: [getDayTextStyles(numberOfDays), textStyle],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }\n  }, getFormattedDate(column, format)));\n};\n\nvar Columns = function Columns(_ref2) {\n  var columns = _ref2.columns,\n      numberOfDays = _ref2.numberOfDays,\n      format = _ref2.format,\n      style = _ref2.style,\n      textStyle = _ref2.textStyle;\n  return React.createElement(View, {\n    style: styles.columns,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 5\n    }\n  }, columns.map(function (column) {\n    return React.createElement(Column, {\n      style: style,\n      textStyle: textStyle,\n      key: column,\n      column: column,\n      numberOfDays: numberOfDays,\n      format: format,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 11\n      }\n    });\n  }));\n};\n\nvar WeekViewHeader = function WeekViewHeader(_ref3) {\n  var numberOfDays = _ref3.numberOfDays,\n      initialDate = _ref3.initialDate,\n      formatDate = _ref3.formatDate,\n      style = _ref3.style,\n      textStyle = _ref3.textStyle,\n      rightToLeft = _ref3.rightToLeft;\n  var columns = calculateDaysArray(initialDate, numberOfDays, rightToLeft);\n  return React.createElement(View, {\n    style: styles.container,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 5\n    }\n  }, columns && React.createElement(Columns, {\n    format: formatDate,\n    columns: columns,\n    numberOfDays: numberOfDays,\n    style: style,\n    textStyle: textStyle,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }\n  }));\n};\n\nWeekViewHeader.propTypes = {\n  numberOfDays: PropTypes.oneOf(availableNumberOfDays).isRequired,\n  initialDate: PropTypes.string.isRequired,\n  formatDate: PropTypes.string,\n  style: PropTypes.object,\n  textStyle: PropTypes.object,\n  rightToLeft: PropTypes.bool\n};\nWeekViewHeader.defaultProps = {\n  formatDate: 'MMM D'\n};\nexport default React.memo(WeekViewHeader);","map":{"version":3,"sources":["/home/kevin/Downloads/bobapp/node_modules/react-native-week-view/src/Header/Header.js"],"names":["React","PropTypes","getFormattedDate","calculateDaysArray","availableNumberOfDays","styles","getDayTextStyles","numberOfDays","fontSize","Column","column","format","style","textStyle","Columns","columns","map","WeekViewHeader","initialDate","formatDate","rightToLeft","container","propTypes","oneOf","isRequired","string","object","bool","defaultProps","memo"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Text, View } from 'react-native';\n\nimport {\n  getFormattedDate,\n  calculateDaysArray,\n  availableNumberOfDays,\n} from '../utils';\nimport styles from './Header.styles';\n\nconst getDayTextStyles = (numberOfDays) => {\n  const fontSize = numberOfDays === 7 ? 12 : 14;\n  return {\n    fontSize,\n  };\n};\n\nconst Column = ({ column, numberOfDays, format, style, textStyle }) => {\n  return (\n    <View style={[styles.column, style]}>\n      <Text style={[getDayTextStyles(numberOfDays), textStyle]}>\n        {getFormattedDate(column, format)}\n      </Text>\n    </View>\n  );\n};\n\nconst Columns = ({ columns, numberOfDays, format, style, textStyle }) => {\n  return (\n    <View style={styles.columns}>\n      {columns.map((column) => {\n        return (\n          <Column\n            style={style}\n            textStyle={textStyle}\n            key={column}\n            column={column}\n            numberOfDays={numberOfDays}\n            format={format}\n          />\n        );\n      })}\n    </View>\n  );\n};\n\nconst WeekViewHeader = ({\n  numberOfDays,\n  initialDate,\n  formatDate,\n  style,\n  textStyle,\n  rightToLeft,\n}) => {\n  const columns = calculateDaysArray(initialDate, numberOfDays, rightToLeft);\n  return (\n    <View style={styles.container}>\n      {columns && (\n        <Columns\n          format={formatDate}\n          columns={columns}\n          numberOfDays={numberOfDays}\n          style={style}\n          textStyle={textStyle}\n        />\n      )}\n    </View>\n  );\n};\n\nWeekViewHeader.propTypes = {\n  numberOfDays: PropTypes.oneOf(availableNumberOfDays).isRequired,\n  initialDate: PropTypes.string.isRequired,\n  formatDate: PropTypes.string,\n  style: PropTypes.object,\n  textStyle: PropTypes.object,\n  rightToLeft: PropTypes.bool,\n};\n\nWeekViewHeader.defaultProps = {\n  formatDate: 'MMM D',\n};\n\nexport default React.memo(WeekViewHeader);\n"]},"metadata":{},"sourceType":"module"}