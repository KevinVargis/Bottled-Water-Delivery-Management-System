{"ast":null,"code":"import Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport moment from 'moment';\n\nvar _Dimensions$get = Dimensions.get('window'),\n    SCREEN_WIDTH = _Dimensions$get.width,\n    SCREEN_HEIGHT = _Dimensions$get.height;\n\nexport var TIME_LABELS_IN_DISPLAY = 12;\nexport var CONTAINER_HEIGHT = SCREEN_HEIGHT - 60;\nexport var CONTAINER_WIDTH = SCREEN_WIDTH - 60;\nexport var TIME_LABEL_HEIGHT = CONTAINER_HEIGHT / TIME_LABELS_IN_DISPLAY;\nexport var DATE_STR_FORMAT = 'YYYY-MM-DD';\nexport var availableNumberOfDays = [1, 3, 5, 7];\nexport var getFormattedDate = function getFormattedDate(date, format) {\n  return moment(date).format(format);\n};\nexport var setLocale = function setLocale(locale) {\n  if (locale) {\n    moment.locale(locale);\n  }\n};\nexport var addLocale = function addLocale(locale, obj) {\n  moment.locale(locale, obj);\n};\nexport var getCurrentMonth = function getCurrentMonth(date) {\n  return moment(date).format('MMMM Y');\n};\nexport var calculateDaysArray = function calculateDaysArray(date, numberOfDays, rightToLeft) {\n  var dates = [];\n  var initial = 0;\n\n  if (numberOfDays === 7) {\n    initial = 1;\n    initial -= moment(date).isoWeekday();\n  }\n\n  for (var i = initial; i < numberOfDays + initial; i += 1) {\n    var currentDate = moment(date).add(i, 'd');\n    dates.push(currentDate);\n  }\n\n  return rightToLeft ? dates.reverse() : dates;\n};","map":{"version":3,"sources":["/home/kevin/Downloads/bobapp/node_modules/react-native-week-view/src/utils.js"],"names":["moment","Dimensions","get","SCREEN_WIDTH","width","SCREEN_HEIGHT","height","TIME_LABELS_IN_DISPLAY","CONTAINER_HEIGHT","CONTAINER_WIDTH","TIME_LABEL_HEIGHT","DATE_STR_FORMAT","availableNumberOfDays","getFormattedDate","date","format","setLocale","locale","addLocale","obj","getCurrentMonth","calculateDaysArray","numberOfDays","rightToLeft","dates","initial","isoWeekday","i","currentDate","add","push","reverse"],"mappings":";AACA,OAAOA,MAAP,MAAmB,QAAnB;;sBAEuDC,UAAU,CAACC,GAAX,CAAe,QAAf,C;IAAxCC,Y,mBAAPC,K;IAA6BC,a,mBAARC,M;;AAC7B,OAAO,IAAMC,sBAAsB,GAAG,EAA/B;AACP,OAAO,IAAMC,gBAAgB,GAAGH,aAAa,GAAG,EAAzC;AACP,OAAO,IAAMI,eAAe,GAAGN,YAAY,GAAG,EAAvC;AACP,OAAO,IAAMO,iBAAiB,GAAGF,gBAAgB,GAAGD,sBAA7C;AACP,OAAO,IAAMI,eAAe,GAAG,YAAxB;AACP,OAAO,IAAMC,qBAAqB,GAAG,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,CAA9B;AAEP,OAAO,IAAMC,gBAAgB,GAAG,SAAnBA,gBAAmB,CAACC,IAAD,EAAOC,MAAP,EAAkB;AAChD,SAAOf,MAAM,CAACc,IAAD,CAAN,CAAaC,MAAb,CAAoBA,MAApB,CAAP;AACD,CAFM;AAIP,OAAO,IAAMC,SAAS,GAAG,SAAZA,SAAY,CAACC,MAAD,EAAY;AACnC,MAAIA,MAAJ,EAAY;AACVjB,IAAAA,MAAM,CAACiB,MAAP,CAAcA,MAAd;AACD;AACF,CAJM;AAMP,OAAO,IAAMC,SAAS,GAAG,SAAZA,SAAY,CAACD,MAAD,EAASE,GAAT,EAAiB;AACxCnB,EAAAA,MAAM,CAACiB,MAAP,CAAcA,MAAd,EAAsBE,GAAtB;AACD,CAFM;AAIP,OAAO,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAACN,IAAD,EAAU;AACvC,SAAOd,MAAM,CAACc,IAAD,CAAN,CAAaC,MAAb,CAAoB,QAApB,CAAP;AACD,CAFM;AAIP,OAAO,IAAMM,kBAAkB,GAAG,SAArBA,kBAAqB,CAACP,IAAD,EAAOQ,YAAP,EAAqBC,WAArB,EAAqC;AACrE,MAAMC,KAAK,GAAG,EAAd;AACA,MAAIC,OAAO,GAAG,CAAd;;AACA,MAAIH,YAAY,KAAK,CAArB,EAAwB;AACtBG,IAAAA,OAAO,GAAG,CAAV;AACAA,IAAAA,OAAO,IAAIzB,MAAM,CAACc,IAAD,CAAN,CAAaY,UAAb,EAAX;AACD;;AACD,OAAK,IAAIC,CAAC,GAAGF,OAAb,EAAsBE,CAAC,GAAGL,YAAY,GAAGG,OAAzC,EAAkDE,CAAC,IAAI,CAAvD,EAA0D;AACxD,QAAMC,WAAW,GAAG5B,MAAM,CAACc,IAAD,CAAN,CAAae,GAAb,CAAiBF,CAAjB,EAAoB,GAApB,CAApB;AACAH,IAAAA,KAAK,CAACM,IAAN,CAAWF,WAAX;AACD;;AACD,SAAOL,WAAW,GAAGC,KAAK,CAACO,OAAN,EAAH,GAAqBP,KAAvC;AACD,CAZM","sourcesContent":["import { Dimensions } from 'react-native';\nimport moment from 'moment';\n\nconst { width: SCREEN_WIDTH, height: SCREEN_HEIGHT } = Dimensions.get('window');\nexport const TIME_LABELS_IN_DISPLAY = 12;\nexport const CONTAINER_HEIGHT = SCREEN_HEIGHT - 60;\nexport const CONTAINER_WIDTH = SCREEN_WIDTH - 60;\nexport const TIME_LABEL_HEIGHT = CONTAINER_HEIGHT / TIME_LABELS_IN_DISPLAY;\nexport const DATE_STR_FORMAT = 'YYYY-MM-DD';\nexport const availableNumberOfDays = [1, 3, 5, 7];\n\nexport const getFormattedDate = (date, format) => {\n  return moment(date).format(format);\n};\n\nexport const setLocale = (locale) => {\n  if (locale) {\n    moment.locale(locale);\n  }\n};\n\nexport const addLocale = (locale, obj) => {\n  moment.locale(locale, obj);\n};\n\nexport const getCurrentMonth = (date) => {\n  return moment(date).format('MMMM Y');\n};\n\nexport const calculateDaysArray = (date, numberOfDays, rightToLeft) => {\n  const dates = [];\n  let initial = 0;\n  if (numberOfDays === 7) {\n    initial = 1;\n    initial -= moment(date).isoWeekday();\n  }\n  for (let i = initial; i < numberOfDays + initial; i += 1) {\n    const currentDate = moment(date).add(i, 'd');\n    dates.push(currentDate);\n  }\n  return rightToLeft ? dates.reverse() : dates;\n};\n"]},"metadata":{},"sourceType":"module"}