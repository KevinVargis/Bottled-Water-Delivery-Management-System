{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/home/kevin/Downloads/bobapp/src/screens/AttendanceScreen.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport StatusBar from \"react-native-web/dist/exports/StatusBar\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport WeekView from 'react-native-week-view';\n\nvar generateDates = function generateDates(hours, minutes) {\n  var date = new Date();\n  date.setHours(date.getHours() + hours);\n\n  if (minutes != null) {\n    date.setMinutes(minutes);\n  }\n\n  return date;\n};\n\nvar sampleEvents = [{\n  id: 1,\n  description: 'Duty Hours',\n  startDate: generateDates(0),\n  endDate: generateDates(4),\n  color: 'black'\n}, {\n  id: 2,\n  description: 'Trip #8909',\n  startDate: generateDates(1),\n  endDate: generateDates(3),\n  color: 'red'\n}, {\n  id: 3,\n  description: 'Duty Hours',\n  startDate: generateDates(-5),\n  endDate: generateDates(-3),\n  color: 'green'\n}];\n\nvar AttendanceScreen = function (_React$Component) {\n  _inherits(AttendanceScreen, _React$Component);\n\n  var _super = _createSuper(AttendanceScreen);\n\n  function AttendanceScreen() {\n    var _this;\n\n    _classCallCheck(this, AttendanceScreen);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = {\n      events: sampleEvents,\n      selectedDate: new Date()\n    };\n\n    _this.onEventPress = function (_ref) {\n      var id = _ref.id,\n          color = _ref.color,\n          startDate = _ref.startDate,\n          endDate = _ref.endDate;\n      Alert.alert(\"event \" + color + \" - \" + id, \"start: \" + startDate + \"\\nend: \" + endDate);\n    };\n\n    _this.onGridClick = function (event, startHour, date) {\n      var dateStr = date.toISOString().split('T')[0];\n      Alert.alert(\"Date: \" + dateStr + \"\\nStart hour: \" + startHour);\n    };\n\n    return _this;\n  }\n\n  _createClass(AttendanceScreen, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$state = this.state,\n          events = _this$state.events,\n          selectedDate = _this$state.selectedDate;\n      return React.createElement(React.Fragment, null, React.createElement(StatusBar, {\n        barStyle: \"dark-content\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 9\n        }\n      }), React.createElement(SafeAreaView, {\n        style: styles.container,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 9\n        }\n      }, React.createElement(WeekView, {\n        ref: function ref(r) {\n          _this2.componentRef = r;\n        },\n        events: events,\n        selectedDate: selectedDate,\n        numberOfDays: 3,\n        onEventPress: this.onEventPress,\n        onGridClick: this.onGridClick,\n        headerStyle: styles.header,\n        headerTextStyle: styles.headerText,\n        hourTextStyle: styles.hourText,\n        eventContainerStyle: styles.eventContainer,\n        formatDateHeader: \"MMM D\",\n        hoursInDisplay: 12,\n        startHour: 8,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }\n      })));\n    }\n  }]);\n\n  return AttendanceScreen;\n}(React.Component);\n\nexport { AttendanceScreen as default };\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#FFF',\n    paddingTop: 22\n  },\n  header: {\n    backgroundColor: '#4286f4',\n    borderColor: '#fff'\n  },\n  headerText: {\n    color: 'white'\n  },\n  hourText: {\n    color: 'black'\n  },\n  eventContainer: {\n    borderWidth: 1,\n    borderColor: 'black'\n  }\n});","map":{"version":3,"sources":["/home/kevin/Downloads/bobapp/src/screens/AttendanceScreen.js"],"names":["React","WeekView","generateDates","hours","minutes","date","Date","setHours","getHours","setMinutes","sampleEvents","id","description","startDate","endDate","color","AttendanceScreen","state","events","selectedDate","onEventPress","Alert","alert","onGridClick","event","startHour","dateStr","toISOString","split","styles","container","r","componentRef","header","headerText","hourText","eventContainer","Component","StyleSheet","create","flex","backgroundColor","paddingTop","borderColor","borderWidth"],"mappings":";;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;;;AAGA,OAAOC,QAAP,MAAqB,wBAArB;;AAEA,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,CAACC,KAAD,EAAQC,OAAR,EAAoB;AACxC,MAAMC,IAAI,GAAG,IAAIC,IAAJ,EAAb;AACAD,EAAAA,IAAI,CAACE,QAAL,CAAcF,IAAI,CAACG,QAAL,KAAkBL,KAAhC;;AACA,MAAIC,OAAO,IAAI,IAAf,EAAqB;AACnBC,IAAAA,IAAI,CAACI,UAAL,CAAgBL,OAAhB;AACD;;AACD,SAAOC,IAAP;AACD,CAPD;;AASA,IAAMK,YAAY,GAAG,CACnB;AACEC,EAAAA,EAAE,EAAE,CADN;AAEEC,EAAAA,WAAW,EAAE,YAFf;AAGEC,EAAAA,SAAS,EAAEX,aAAa,CAAC,CAAD,CAH1B;AAIEY,EAAAA,OAAO,EAAEZ,aAAa,CAAC,CAAD,CAJxB;AAKEa,EAAAA,KAAK,EAAE;AALT,CADmB,EAQnB;AACEJ,EAAAA,EAAE,EAAE,CADN;AAEEC,EAAAA,WAAW,EAAE,YAFf;AAGEC,EAAAA,SAAS,EAAEX,aAAa,CAAC,CAAD,CAH1B;AAIEY,EAAAA,OAAO,EAAEZ,aAAa,CAAC,CAAD,CAJxB;AAKEa,EAAAA,KAAK,EAAE;AALT,CARmB,EAenB;AACEJ,EAAAA,EAAE,EAAE,CADN;AAEEC,EAAAA,WAAW,EAAE,YAFf;AAGEC,EAAAA,SAAS,EAAEX,aAAa,CAAC,CAAC,CAAF,CAH1B;AAIEY,EAAAA,OAAO,EAAEZ,aAAa,CAAC,CAAC,CAAF,CAJxB;AAKEa,EAAAA,KAAK,EAAE;AALT,CAfmB,CAArB;;IAwBqBC,gB;;;;;;;;;;;;;;;UACnBC,K,GAAQ;AACNC,MAAAA,MAAM,EAAER,YADF;AAENS,MAAAA,YAAY,EAAE,IAAIb,IAAJ;AAFR,K;;UAKRc,Y,GAAe,gBAAqC;AAAA,UAAnCT,EAAmC,QAAnCA,EAAmC;AAAA,UAA/BI,KAA+B,QAA/BA,KAA+B;AAAA,UAAxBF,SAAwB,QAAxBA,SAAwB;AAAA,UAAbC,OAAa,QAAbA,OAAa;AAClDO,MAAAA,KAAK,CAACC,KAAN,YACWP,KADX,WACsBJ,EADtB,cAEYE,SAFZ,eAE+BC,OAF/B;AAID,K;;UAEDS,W,GAAc,UAACC,KAAD,EAAQC,SAAR,EAAmBpB,IAAnB,EAA4B;AACxC,UAAMqB,OAAO,GAAGrB,IAAI,CAACsB,WAAL,GAAmBC,KAAnB,CAAyB,GAAzB,EAA8B,CAA9B,CAAhB;AACAP,MAAAA,KAAK,CAACC,KAAN,YAAqBI,OAArB,sBAA6CD,SAA7C;AACD,K;;;;;;;WAED,kBAAS;AAAA;;AAAA,wBACwB,KAAKR,KAD7B;AAAA,UACAC,MADA,eACAA,MADA;AAAA,UACQC,YADR,eACQA,YADR;AAEP,aACE,0CACE,oBAAC,SAAD;AAAW,QAAA,QAAQ,EAAC,cAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAEE,oBAAC,YAAD;AAAc,QAAA,KAAK,EAAEU,MAAM,CAACC,SAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,QAAD;AACE,QAAA,GAAG,EAAE,aAAAC,CAAC,EAAI;AACR,UAAA,MAAI,CAACC,YAAL,GAAoBD,CAApB;AACD,SAHH;AAIE,QAAA,MAAM,EAAEb,MAJV;AAKE,QAAA,YAAY,EAAEC,YALhB;AAME,QAAA,YAAY,EAAE,CANhB;AAOE,QAAA,YAAY,EAAE,KAAKC,YAPrB;AAQE,QAAA,WAAW,EAAE,KAAKG,WARpB;AASE,QAAA,WAAW,EAAEM,MAAM,CAACI,MATtB;AAUE,QAAA,eAAe,EAAEJ,MAAM,CAACK,UAV1B;AAWE,QAAA,aAAa,EAAEL,MAAM,CAACM,QAXxB;AAYE,QAAA,mBAAmB,EAAEN,MAAM,CAACO,cAZ9B;AAaE,QAAA,gBAAgB,EAAC,OAbnB;AAcE,QAAA,cAAc,EAAE,EAdlB;AAeE,QAAA,SAAS,EAAE,CAfb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CAFF,CADF;AAwBD;;;;EA5C2CpC,KAAK,CAACqC,S;;SAA/BrB,gB;AA+CrB,IAAMa,MAAM,GAAGS,UAAU,CAACC,MAAX,CAAkB;AAC/BT,EAAAA,SAAS,EAAE;AACTU,IAAAA,IAAI,EAAE,CADG;AAETC,IAAAA,eAAe,EAAE,MAFR;AAGTC,IAAAA,UAAU,EAAE;AAHH,GADoB;AAM/BT,EAAAA,MAAM,EAAE;AACNQ,IAAAA,eAAe,EAAE,SADX;AAENE,IAAAA,WAAW,EAAE;AAFP,GANuB;AAU/BT,EAAAA,UAAU,EAAE;AACVnB,IAAAA,KAAK,EAAE;AADG,GAVmB;AAa/BoB,EAAAA,QAAQ,EAAE;AACRpB,IAAAA,KAAK,EAAE;AADC,GAbqB;AAgB/BqB,EAAAA,cAAc,EAAE;AACdQ,IAAAA,WAAW,EAAE,CADC;AAEdD,IAAAA,WAAW,EAAE;AAFC;AAhBe,CAAlB,CAAf","sourcesContent":["import React from 'react';\nimport {SafeAreaView, StyleSheet, StatusBar, Alert} from 'react-native';\n// @ts-ignore\nimport WeekView from 'react-native-week-view';\n\nconst generateDates = (hours, minutes) => {\n  const date = new Date();\n  date.setHours(date.getHours() + hours);\n  if (minutes != null) {\n    date.setMinutes(minutes);\n  }\n  return date;\n};\n\nconst sampleEvents = [\n  {\n    id: 1,\n    description: 'Duty Hours',\n    startDate: generateDates(0),\n    endDate: generateDates(4),\n    color: 'black',\n  },\n  {\n    id: 2,\n    description: 'Trip #8909',\n    startDate: generateDates(1),\n    endDate: generateDates(3),\n    color: 'red',\n  },\n  {\n    id: 3,\n    description: 'Duty Hours',\n    startDate: generateDates(-5),\n    endDate: generateDates(-3),\n    color: 'green',\n  },\n];\n\nexport default class AttendanceScreen extends React.Component {\n  state = {\n    events: sampleEvents,\n    selectedDate: new Date(),\n  };\n\n  onEventPress = ({id, color, startDate, endDate}) => {\n    Alert.alert(\n      `event ${color} - ${id}`,\n      `start: ${startDate}\\nend: ${endDate}`,\n    );\n  };\n\n  onGridClick = (event, startHour, date) => {\n    const dateStr = date.toISOString().split('T')[0];\n    Alert.alert(`Date: ${dateStr}\\nStart hour: ${startHour}`);\n  };\n\n  render() {\n    const {events, selectedDate} = this.state;\n    return (\n      <>\n        <StatusBar barStyle=\"dark-content\" />\n        <SafeAreaView style={styles.container}>\n          <WeekView\n            ref={r => {\n              this.componentRef = r;\n            }}\n            events={events}\n            selectedDate={selectedDate}\n            numberOfDays={3}\n            onEventPress={this.onEventPress}\n            onGridClick={this.onGridClick}\n            headerStyle={styles.header}\n            headerTextStyle={styles.headerText}\n            hourTextStyle={styles.hourText}\n            eventContainerStyle={styles.eventContainer}\n            formatDateHeader=\"MMM D\"\n            hoursInDisplay={12}\n            startHour={8}\n          />\n        </SafeAreaView>\n      </>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#FFF',\n    paddingTop: 22,\n  },\n  header: {\n    backgroundColor: '#4286f4',\n    borderColor: '#fff',\n  },\n  headerText: {\n    color: 'white',\n  },\n  hourText: {\n    color: 'black',\n  },\n  eventContainer: {\n    borderWidth: 1,\n    borderColor: 'black',\n  },\n});"]},"metadata":{},"sourceType":"module"}